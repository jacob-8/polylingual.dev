reTypewriter Snapshots v1

--01----------

--02----------
<script lang="ts">
  export let text__字符串: string;
</script>

<div class="chinese-font__中文字體" style="font-size: 2rem;">
  {text__字符串}
</div>

--03----------
<script lang="ts">
  export let text__字符串: string;
  $: characters__字數組 = text__字符串?.trim().split('') || [];
</script>

<div class="chinese-font__中文字體" style="font-size: 2rem;">
  {#each characters__字數組 as character__字}
    {character__字}
  {/each}
</div>

--04----------
<script lang="ts">
  export let text__字符串: string;
  $: characters__字數組 = text__字符串?.trim().split('') || [];
</script>

<div class="chinese-font__中文字體" style="font-size: 2rem; display: flex; flex-direction: column;">
  {#each characters__字數組 as character__字}
    <div>
      {character__字}
    </div>
  {/each}
</div>

--05----------
<script lang="ts">
  import classical_to_mandarin_dictionary__文言文到中文字典 from './data/classical_to_mandarin_dictionary__文言文到中文字典.json';

  interface ClassicalToMandarinDictionaryEntry__文言文到中文字典條目 {
    word: string;
    explain: {
      [pronunciation: string]: string[];
    };
    url: string;
  }

  const entries__條目數組: ClassicalToMandarinDictionaryEntry__文言文到中文字典條目[] =	classical_to_mandarin_dictionary__文言文到中文字典;

  export let text__字符串: string;
  $: characters__字數組 = text__字符串?.trim().split('') || [];
</script>

<div class="chinese-font__中文字體" style="font-size: 2rem; display: flex; flex-direction: column;">
  {#each characters__字數組 as character__字}
    <div>
      {character__字}
    </div>
  {/each}
</div>

--06----------
<script lang="ts">
  import classical_to_mandarin_dictionary__文言文到中文字典 from './data/classical_to_mandarin_dictionary__文言文到中文字典.json';

  interface ClassicalToMandarinDictionaryEntry__文言文到中文字典條目 {
    word: string;
    explain: {
      [pronunciation: string]: string[];
    };
    url: string;
  }

  const entries__條目數組: ClassicalToMandarinDictionaryEntry__文言文到中文字典條目[] = classical_to_mandarin_dictionary__文言文到中文字典;

  export let text__字符串: string;
  $: characters__字數組 = text__字符串?.trim().split('') || [];
</script>

<div class="chinese-font__中文字體" style="font-size: 2rem; display: flex; flex-direction: column;">
  {#each characters__字數組 as character__字}
    {@const entry__條目 = entries__條目數組.find((e) => e.word === character__字)}
    <div>
      {character__字}
    </div>
  {/each}
</div>

--07----------
<script lang="ts">
  import classical_to_mandarin_dictionary__文言文到中文字典 from './data/classical_to_mandarin_dictionary__文言文到中文字典.json';

  interface ClassicalToMandarinDictionaryEntry__文言文到中文字典條目 {
    word: string;
    explain: {
      [pronunciation: string]: string[];
    };
    url: string;
  }

  const entries__條目數組: ClassicalToMandarinDictionaryEntry__文言文到中文字典條目[] = classical_to_mandarin_dictionary__文言文到中文字典;

  export let text__字符串: string;
  $: characters__字數組 = text__字符串?.trim().split('') || [];
</script>

<div class="chinese-font__中文字體" style="font-size: 2rem; display: flex; flex-direction: column;">
  {#each characters__字數組 as character__字}
    {@const entry__條目 = entries__條目數組.find((e) => e.word === character__字)}
    <div>
      {character__字}
      {#if entry__條目}
        {#each Object.entries(entry__條目.explain) as [pronuncation__發音, explanations__定義數組]}
          {pronuncation__發音}
        {/each}
      {/if}
    </div>
  {/each}
</div>

--08----------
<script lang="ts">
  import { is中文 } from './helpers__幫助';
  import classical_to_mandarin_dictionary__文言文到中文字典 from './data/classical_to_mandarin_dictionary__文言文到中文字典.json';

  interface ClassicalToMandarinDictionaryEntry__文言文到中文字典條目 {
    word: string;
    explain: {
      [pronunciation: string]: string[];
    };
    url: string;
  }

  const entries__條目數組: ClassicalToMandarinDictionaryEntry__文言文到中文字典條目[] = classical_to_mandarin_dictionary__文言文到中文字典;

  export let text__字符串: string;
  $: characters__字數組 = text__字符串?.trim().split('') || [];
</script>

<div class="chinese-font__中文字體" style="font-size: 2rem; display: flex; flex-direction: column;">
  {#each characters__字數組 as character__字}
    {#if is中文(character__字)}
      {@const entry__條目 = entries__條目數組.find((e) => e.word === character__字)}
      <div>
        {character__字}
        {#if entry__條目}
          {#each Object.entries(entry__條目.explain) as [pronuncation__發音, explanations__定義數組]}
            {pronuncation__發音}
          {/each}
        {/if}
      </div>
    {/if}
  {/each}
</div>

--09----------
<script lang="ts">
  import { is中文 } from './helpers__幫助';
  import classical_to_mandarin_dictionary__文言文到中文字典 from './data/classical_to_mandarin_dictionary__文言文到中文字典.json';

  interface ClassicalToMandarinDictionaryEntry__文言文到中文字典條目 {
    word: string;
    explain: {
      [pronunciation: string]: string[];
    };
    url: string;
  }

  const entries__條目數組: ClassicalToMandarinDictionaryEntry__文言文到中文字典條目[] = classical_to_mandarin_dictionary__文言文到中文字典;

  export let text__字符串: string;
  $: characters__字數組 = text__字符串?.trim().split('') || [];
</script>

<div class="chinese-font__中文字體" style="font-size: 2rem; display: flex; flex-direction: column;">
  {#each characters__字數組 as character__字}
    {#if is中文(character__字)}
      {@const entry__條目 = entries__條目數組.find((e) => e.word === character__字)}
      <div>
        {character__字}
        {#if entry__條目}
          {#each Object.entries(entry__條目.explain) as [pronuncation__發音, explanations__定義數組]}
            {pronuncation__發音}
            <div style="width: 100%; margin: 2px 2px 2px 8px; padding: 2px; border: 1px dashed lightgray;">
              {#each explanations__定義數組 as explanation__定義}
                <div>
                  {@html explanation__定義}
                </div>
              {/each}
            </div>
          {/each}
        {/if}
      </div>
    {/if}
  {/each}
</div>

--10----------
<script lang="ts">
  import { is中文 } from './helpers__幫助';
  import classical_to_mandarin_dictionary__文言文到中文字典 from './data/classical_to_mandarin_dictionary__文言文到中文字典.json';

  interface ClassicalToMandarinDictionaryEntry__文言文到中文字典條目 {
    word: string;
    explain: {
      [pronunciation: string]: string[];
    };
    url: string;
  }

  const entries__條目數組: ClassicalToMandarinDictionaryEntry__文言文到中文字典條目[] = classical_to_mandarin_dictionary__文言文到中文字典;

  export let text__字符串: string;
  $: characters__字數組 = text__字符串?.trim().split('') || [];
</script>

<div class="chinese-font__中文字體" style="font-size: 2rem; display: flex; flex-direction: column;">
  {#each characters__字數組 as character__字}
    {#if is中文(character__字)}
      {@const entry__條目 = entries__條目數組.find((e) => e.word === character__字)}
      <div style="display: flex;">
        {character__字}
        {#if entry__條目}
          <div style="font-size: 75%; margin-left: 8px; width: 100%;">
            {#each Object.entries(entry__條目.explain) as [pronuncation__發音, explanations__定義數組]}
              <div style="display: flex;">
                {pronuncation__發音}
                <div style="width: 100%; margin: 2px 2px 2px 8px; padding: 2px; border: 1px dashed lightgray;">
                  {#each explanations__定義數組 as explanation__定義}
                    <div>
                      {@html explanation__定義}
                    </div>
                  {/each}
                </div>
              </div>
            {/each}
          </div>
        {/if}
      </div>
    {/if}
  {/each}
</div>

--------------
